[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tinymind"
version = "0.2.0"
description = "A biologically-inspired minimal AI system mimicking mouse brain architecture with CLI interface"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [
    { name = "TinyMind Team", email = "team@tinymind.ai" },
]
keywords = ["ai", "reinforcement-learning", "neuroscience", "brain", "cli", "gymnasium"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "gymnasium>=0.29.0",
    "tensorflow>=2.13.0",
    "minigrid>=2.5.0",
    "click>=8.1.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/tinymind/tinymind"
Repository = "https://github.com/tinymind/tinymind"
Documentation = "https://tinymind.readthedocs.io"
"Bug Tracker" = "https://github.com/tinymind/tinymind/issues"

[project.scripts]
tinymind = "tinymind.cli:main"

[tool.hatchling.build.targets.wheel]
packages = ["tinymind"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["tinymind"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=tinymind",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "--disable-warnings",
] 